version: "3"

services:
    database:
        image: postgres
        restart: always
        environment:
            POSTGRES_USER: freduser
            POSTGRES_PASSWORD: freduserpassword
            POSTGRES_DB: freddb
        volumes:
            - db_data:/var/lib/postgresql/data
            - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - site
        healthcheck:
            test: ["CMD-SHELL", "sleep 10 && pg_isready -U postgres"]
            interval: 10s
            retries: 5

    rest:
        build:
            context: ./rest
            dockerfile: Dockerfile
        depends_on:
            - database
        networks:
            - site
        container_name: rest
        ports:
            - "3001:3000"
        restart: on-failure:5

    # rest2:
    #     build:
    #         context: ./rest
    #         dockerfile: Dockerfile
    #     depends_on:
    #         - database
    #     networks:
    #         - site
    #     container_name: rest2
    #     ports:
    #         - "3002:3000"
    #     restart: on-failure:5

    # rest3:
    #     build:
    #         context: ./rest
    #         dockerfile: Dockerfile
    #     depends_on:
    #         - database
    #     networks:
    #         - site
    #     container_name: rest3
    #     ports:
    #         - "3003:3000"
    #     restart: on-failure:5

    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        ports:
            - "9090:80"
            # - "443:443"
        volumes:
            - ./nginx/certs:/etc/nginx/certs // Added volume for SSL certificates
            - ./nginx/logs:/var/log/nginx
        depends_on:
            - rest
            # - rest2
            # - rest3
        networks:
            - site
        restart: always

networks:
    site:

volumes:
    db_data:
